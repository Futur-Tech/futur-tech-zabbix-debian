#!/bin/bash

# .BAK file cleaner Script v1.1 Guilaume Hullin

source "$(dirname "$0")/ft-util_inc_var"

$S_LOG -s debug -d $S_NAME "Cleaning start ${1}"

if [ -z "${1}" ] ; then exit ; fi  

# https://catonmat.net/bash-one-liners-explained-part-three (22. Send stdout to one process and stderr to another process)
# https://stackoverflow.com/questions/51410472/bash-wait-for-process-substitution-subshell-to-finish/51410920#51410920
coproc read
find ${1}* -maxdepth 0 -type f -mtime +7 -name '*.bak' -delete -print 2> >($S_LOG -s err -d $S_NAME -d "${1}") > >($S_LOG -d $S_NAME -d "${1}")
# find ${1}* -maxdepth 0 -type f -mtime +7 -name '*.bak' -delete -print 2> >($S_LOG -s err -d $S_NAME -d "${1}") > >($S_LOG -d $S_NAME -d "${1}")
returncode=$? # store the exit code of the command
exec {COPROC[1]}>&- 
read -u ${COPROC[0]} 

# $S_LOG -d $S_NAME "Cleaning ended ${1}"
