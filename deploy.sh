#!/usr/bin/env bash

source "$(dirname "$0")/ft-util/ft_util_inc_var"
source "$(dirname "$0")/ft-util/ft_util_inc_var"

src_dir="/usr/local/src"
zbx_conf="/etc/zabbix/zabbix_agent2.conf"
zbx_conf_d="/etc/zabbix/zabbix_agent2.d"

LOG_DEBUG=true

$S_LOG -d $S_NAME "Start $S_NAME $*"

if $S_DIR_PATH/ft-util/ft_util_pkg "zabbix-agent"; then
    $S_LOG -s warn -d $S_NAME "Zabbix Agent is already installed and need to be replaced by Zabbix Agent2"
    $S_LOG -s warn -d $S_NAME "Removing zabbix-agent"

    DEBIAN_FRONTEND=noninteractive apt-get remove -qq --purge zabbix-agent </dev/null >/dev/null
    $S_LOG -s $? -d $S_NAME "apt-get remove -qq --purge zabbix-agent returned EXIT_CODE=$?"

    $S_DIR_PATH/ft-util/ft_util_pkg -u -i "zabbix-agent2" || exit 1

elif $S_DIR_PATH/ft-util/ft_util_pkg "zabbix-agent2"; then
    $S_LOG -d $S_NAME "Zabbix Agent 2 is already installed"

else

    pkg_repo_url="repo.zabbix.com/zabbix/6.0/debian"
    pkg_zbx_url="https://${pkg_repo_url}/pool/main/z/zabbix-release"
    pkg_zbx_name="zabbix-release"

    # Overide for Raspberry Pi OS
    if cat /etc/os-release | grep 'raspbian' >/dev/null; then
        $S_LOG -d $S_NAME "Raspberry Pi OS Detected"
        pkg_repo_url="repo.zabbix.com/zabbix/6.0/raspbian"
        pkg_zbx_url="http://${pkg_repo_url}/pool/main/z/zabbix-release"
    fi

    # Get correct package for Debian Version
    case $(sed -rn 's/([0-9]+)\.[0-9]+/\1/p' /etc/debian_version) in
    9)
        pkg_zbx_name="${pkg_zbx_name}_5.0-1+stretch_all.deb"
        ;;
    10)
        pkg_zbx_name="${pkg_zbx_name}_5.0-1+buster_all.deb"
        ;;
    11)
        pkg_zbx_name="${pkg_zbx_name}_5.0-1+bullseye_all.deb"
        ;;
    12)
        pkg_zbx_name="${pkg_zbx_name}_5.0-1+bullseye_all.deb" # Temp until upgrade to Zabbix 6.0
        ;;
    *)
        $S_LOG -s warn -d $S_NAME "Version of Debian not supported by the script."
        exit 1
        ;;
    esac

    cd $src_dir
    if [ -e ${pkg_zbx_name} ]; then
        $S_LOG -s $? -d $S_NAME "Package ${pkg_zbx_name} found in $src_dir"
    else
        run_cmd_log wget --quiet ${pkg_zbx_url}/${pkg_zbx_name}
    fi

    # Remove Zabbix Agent 2 (if was installed)
    $S_LOG -d $S_NAME "Removing Zabbix Agent 2"

    DEBIAN_FRONTEND=noninteractive apt-get remove -qq --purge zabbix-agent* </dev/null >/dev/null
    $S_LOG -s $? -d $S_NAME "apt-get remove -qq --purge zabbix-agent*"

    dpkg -r zabbix-release >/dev/null
    $S_LOG -s $? -d $S_NAME "dpkg -r zabbix-release"

    # Install packages
    dpkg -i ${pkg_zbx_name} >/dev/null
    $S_LOG -s $? -d $S_NAME "DPKG of ${pkg_zbx_name} returned code $?"

    # Install Zabbix Agent 2
    $S_DIR_PATH/ft-util/ft_util_pkg -u -i "zabbix-agent2" || exit 1

fi

# Deploy Config
$S_LOG -d $S_NAME "Zabbix Agent 2 configuration"

if [ -n "$1" ] && [ -n "$2" ]; then
    ZBX_SRV_PASSIVE=$1
    ZBX_SRV_ACTIVE=$2
else
    source <(grep "Server" ${zbx_conf})
    $S_LOG -s $? -d $S_NAME "Loaded ZBX_SRV_PASSIVE and ZBX_SRV_ACTIVE variable from ${zbx_conf}"
    ZBX_SRV_PASSIVE="${Server}"
    ZBX_SRV_ACTIVE="${ServerActive}"
    $S_LOG -d $S_NAME "ZBX_SRV_PASSIVE=\"${ZBX_SRV_PASSIVE}\""
    $S_LOG -d $S_NAME "ZBX_SRV_ACTIVE=\"${ZBX_SRV_ACTIVE}\""
fi

[ ! -e "${zbx_conf}.origin" ] && cp "${zbx_conf}" "${zbx_conf}.origin"

if [ ! -d "${zbx_conf_d}" ]; then
    mkdir -pv "${zbx_conf_d}"
    $S_LOG -s $? -d $S_NAME "Creating ${zbx_conf_d} returned EXIT_CODE=$?"
fi

# Migrating PSK config from Zabbix Agent to Zabbix Agent 2
if [ -f "/etc/zabbix/zabbix_agentd.conf.d/ft-psk.conf" ]; then
    $S_LOG -s warn -d $S_NAME "Migrating PSK config to Zabbix Agent 2"
    mv -f "/etc/zabbix/zabbix_agentd.conf.d/ft-psk.conf" "${zbx_conf_d}/ft-psk.conf"
    mv -f "/etc/zabbix/zabbix_agentd.conf.d/ft-psk-userparam.conf" "${zbx_conf_d}/ft-psk-userparam.conf"
fi

run_cmd_log mkdir -pv "/var/log/zabbix/"
run_cmd_log chown zabbix:zabbix "/var/log/zabbix/"

# Add zabbix user to standard monitoring group https://wiki.debian.org/SystemGroups
run_cmd_log usermod --append --groups adm zabbix
run_cmd_log usermod --append --groups systemd-journal zabbix

echo "# Generated by ${S_NAME}
# $(date)
Hostname=$(hostname -f)
Server=${ZBX_SRV_PASSIVE}
ServerActive=${ZBX_SRV_ACTIVE}
PidFile=/var/run/zabbix/zabbix_agent2.pid
LogFile=/var/log/zabbix/zabbix_agent2.log
LogFileSize=0
ControlSocket=/tmp/agent.sock
Include=${zbx_conf_d}/*.conf" >${zbx_conf}
cat $zbx_conf | $S_LOG -d "$S_NAME" -d "$zbx_conf" -i

# Enable Zabbix Agent 2
run_cmd_log systemctl enable zabbix-agent2 &>/dev/null

# Restart Zabbix Agent 2
echo "systemctl restart zabbix-agent2" | at now + 1 min &>/dev/null ## restart zabbix agent with a delay
$S_LOG -s $? -d "$S_NAME" "Scheduling Zabbix Agent Restart"

$S_LOG -d "$S_NAME" "End $S_NAME"
